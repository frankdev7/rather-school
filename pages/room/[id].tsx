import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { GetStaticProps, GetStaticPropsContext, GetStaticPropsResult } from 'next'
import { Room, RoomStudents, Student, StudentRelationship } from '@/types'
import { getStudentsFromRoom } from '../api/hello'
import Link from 'next/link'
import { useRouter } from 'next/router'

const inter = Inter({ subsets: ['latin'] })

interface Props {
  students: Student[];
}

export default function RoomPage({ students }: Props) {
  const router = useRouter();
  const { name, description } = router.query;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>{name}</h1>
        <p>
          {description}
        </p>

        {students && (

          <div className={styles.grid}>
            {
              students.map((student) => {
                return (
                  <div key={student.id}>
                    <Link href={{ pathname: "/student/[id]", query: { id: student.id, name: student.name, surname: student.surname } }}>

                      <h2 className={inter.className}>
                        {student.name}
                      </h2>
                      <p className={inter.className}>
                        {student.surname}
                      </p>
                    </Link>
                  </div>
                )
              })
            }
          </div>
        )}
      </main>
    </>
  )
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: true,
  }
}

export const getStaticProps: GetStaticProps<Props> = async ({ params }:
  GetStaticPropsContext): Promise<GetStaticPropsResult<Props>> => {
  const { id } = params as { id: string };
  const students: Student[] = await getStudentsFromRoom(id);

  console.log(students)

  return {
    props: {
      students
    }
  };
}

